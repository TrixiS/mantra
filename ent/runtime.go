// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/TrixiS/mantra/ent/connection"
	"github.com/TrixiS/mantra/ent/schema"
	"github.com/TrixiS/mantra/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	connectionFields := schema.Connection{}.Fields()
	_ = connectionFields
	// connectionDescName is the schema descriptor for name field.
	connectionDescName := connectionFields[1].Descriptor()
	// connection.NameValidator is a validator for the "name" field. It is called by the builders before save.
	connection.NameValidator = connectionDescName.Validators[0].(func(string) error)
	// connectionDescHost is the schema descriptor for host field.
	connectionDescHost := connectionFields[2].Descriptor()
	// connection.HostValidator is a validator for the "host" field. It is called by the builders before save.
	connection.HostValidator = connectionDescHost.Validators[0].(func(string) error)
	// connectionDescUser is the schema descriptor for user field.
	connectionDescUser := connectionFields[4].Descriptor()
	// connection.UserValidator is a validator for the "user" field. It is called by the builders before save.
	connection.UserValidator = connectionDescUser.Validators[0].(func(string) error)
	// connectionDescPassword is the schema descriptor for password field.
	connectionDescPassword := connectionFields[5].Descriptor()
	// connection.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	connection.PasswordValidator = connectionDescPassword.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[1].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func([]byte) error)
}
